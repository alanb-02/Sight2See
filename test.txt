                            <div key={product.id} class="card">
                                <a href={`/product/${product._id}`}>{/* this is telling the link for the product of that specific product id */}
                                    <img class="medium" src={product.image} alt={product.name}/>{/* image size must be: 680px by 830px */}
                                </a>
                                <div class="card-body">
                                    <a href={`/product/${product._id}`}>{/* this is telling the link for the product of that specific product id */}
                                        <h2>{product.name}</h2>
                                        <h3>{product.brand}</h3>
                                    </a>
                                    <div class="rating">
                                        <span><i class="fa fa-star"></i></span>
                                        <span><i class="fa fa-star"></i></span>
                                        <span><i class="fa fa-star"></i></span>
                                        <span><i class="fa fa-star"></i></span>
                                        <span><i class="fa fa-star"></i></span>
                                    </div>
                                    <div class="price">
                                        ${product.price}
                                    </div>
                                </div>
                            </div>



import { useEffect, useReducer, useState } from 'react';
import { Link } from 'react-router-dom';
import axios from 'axios';
import logger from 'use-reducer-logger';
// import data from '../data';

const reducer = (state, action) => {
  switch (action.type) {
    case 'FETCH_REQUEST':
      return { ...state, loading: true };
    case 'FETCH_SUCCESS':
      return { ...state, products: action.payload, loading: false };
    case 'FETCH_FAIL':
      return { ...state, loading: false, error: action.payload };
    default:
      return state;
  }
};

function HomeScreen() {
  const [{ loading, error, products }, dispatch] = useReducer(logger(reducer), {
    products: [],
    loading: true,
    error: '',
  });

  useEffect(() => {
    const fetchData = async () => {
      dispatch({ type: 'FETCH_REQUEST' });
      try {
        const result = await axios.get('/api/products');
        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });
      } catch (err) {
        dispatch({ type: 'FETCH_FAIL', payload: err.message });
      }
    };
    fetchData();
  }, []);

  return (
    <div>
      <h1>Featured Products</h1>
      <div className="row center">
        {products.map((product) => (
          <div className="card" key={product.slug}>
            {/* class=product */}
            <Link to={`/product/${product.slug}`}>
              <img className="medium" src={product.image} alt={product.name} />
            </Link>
            <div className="card-body">
              {/* class=product-info */}
              <Link to={`/product/${product.slug}`}>
                <p>{product.name}</p>
              </Link>
              <p>
                <strong className="price">${product.price}</strong>
              </p>
              <button>Add to cart</button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
export default HomeScreen;





html {
  font-size: 62.5%; /* the default pixels ize on the browser will be 16px and 62.5 % of that will be 10px/1rem */
  box-sizing: border-box;
}

body {
  margin: 0;
  height: 100vh;
  font-size: 1.6rem;
  font-family: Arial, Helvetica, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* root div in index html file full height */
#root {
  height: 100%;
}

/* Layout */
.grid-container {
  display: grid;
  grid-template-areas: 'header' 'main' 'footer';
  grid-template-columns: 1fr;
  grid-template-rows: 5rem 1fr 5rem;
  height: 100%;
}

header {
  grid-area: header;
  background-color: rgb(246, 188, 108);
}

main {
  grid-area: main;
  padding: 5rem; /* was 1rem to bring edges closer */
  flex: 1;
}

footer {
  grid-area: footer;
  background-color: rgb(255, 157, 0);
  color: #ffffff;
}

/* COMMON CLASSES */
h1 {
  font-size: 1.8rem;
  padding: 1rem 0; /* hor and vertically padding */
}

h2 {
  font-size: 1.6rem;
  padding: 1rem 0; /* hor and vertically padding */
}

/* MY OWN LINE */
h3 {
  font-size: 1.4rem;
  padding: 1rem 0;
  color: grey;
}

a {
  text-decoration: none;
}

a:hover {
  color: rgb(255, 157, 0);
}

header a {
  color: #ffffff;
  padding: 1rem;
}

a.brandName {
  color: #ffffff;
  font-size: 3rem;
  font-weight: bold;
}

/* place items next to each other */
/* if not enough space the items will be moved to seperate lines */
/* create max distanace between items in a row */
.row {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}

.row.center {
  justify-content: center;
}

/* images */
img {
  border-radius: 0.5rem;
}
img.medium {
  max-width: 26.6rem;
  height: 20rem;
  width: 100%;
}

/* card */
.card {
  border: 0.1rem #bcbcbc solid;
  background-color: #ffffff;
  border-radius: 0.5rem;
  margin: 1rem;
}

/* MY OWN LINE */
.card:hover {
  border: 0.1rem rgb(255, 157, 0) solid;
}

.card-body {
  padding: 1rem;
}

/* 
.card-body:hover{
  background-color: #ffecd1;
} */

/* for all the content inside teh cardbody div */
.card-body > * {
  margin-bottom: 0.5rem;
  color: #000000;
}

.price {
  font-size: 2rem;
}

/* Rating */
.rating span {
  color: #edd38c;
  margin: 0.1rem;
}

.rating span:last-child {
  color: #585858;
  padding-left: 10px;
}



